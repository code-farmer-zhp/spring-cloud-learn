<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:property-placeholder location="classpath*:application.properties"/>
	<import resource="classpath:applicationContext-score-impl.xml"/>
	<bean id="consumerClient" class="com.feiniu.kafka.client.ConsumerClient" destroy-method="close">
		<constructor-arg index="0" value="${zookeeper.connect}" />
		<constructor-arg index="1" value="${fn.group.order.score.id}" />
		<constructor-arg index="2">
			<props>
				<prop key="zookeeper.connection.timeout.ms">${zookeeper.connection.timeout.ms}</prop>
				<prop key="auto.offset.reset">${auto.offset.reset}</prop>
			</props>
		</constructor-arg>
		<constructor-arg index="3" value="${fn.topic.order.score}" />
		<constructor-arg index="4" ref="orderScoreHandler" />
	</bean>
	<bean id="orderScoreHandler" class="com.feiniu.score.handler.OrderScoreHandler" />
	<!-- 成长值消息消费端口  -->
	<bean id="growthConsumerClient" class="com.feiniu.kafka.client.ConsumerClient" destroy-method="close">
		<constructor-arg index="0" value="${zookeeper.connect}" />
		<constructor-arg index="1" value="${fn.group.order.score.id}" />
		<constructor-arg index="2">
			<props>
				<prop key="zookeeper.connection.timeout.ms">${zookeeper.connection.timeout.ms}</prop>
				<prop key="auto.offset.reset">${auto.offset.reset}</prop>
			</props>
		</constructor-arg>
		<constructor-arg index="3" value="${fn.topic.score.growth}" />
		<constructor-arg index="4" ref="growthHandler" />
	</bean>
    <bean id="growthHandler" class="com.feiniu.score.handler.GrowthHandler" /> 
    <!-- 等级消息消费端 -->
    <bean id="gradeConsumerClient" class="com.feiniu.kafka.client.ConsumerClient" destroy-method="close">
		<constructor-arg index="0" value="${zookeeper.connect}" />
		<constructor-arg index="1" value="${fn.group.order.score.id}" />
		<constructor-arg index="2">
			<props>
				<prop key="zookeeper.connection.timeout.ms">${zookeeper.connection.timeout.ms}</prop>
				<prop key="auto.offset.reset">${auto.offset.reset}</prop>
			</props>
		</constructor-arg>
		<constructor-arg index="3" value="${fn.topic.score.grade}" />
		<constructor-arg index="4" ref="gradeHandler" />
	</bean>
    <bean id="gradeHandler" class="com.feiniu.score.handler.GradeHandler" /> 
     

	<!-- 取消订单监听消费-->
    <bean id="cancelMallOrderConsumerClient" class="com.feiniu.kafka.client.ConsumerClient" destroy-method="close">
		<constructor-arg index="0" value="${zookeeper.connect}" />
		<constructor-arg index="1" value="${fn.group.order.score.id}" />
		<constructor-arg index="2">
			<props>
				<prop key="zookeeper.connection.timeout.ms">${zookeeper.connection.timeout.ms}</prop>
				<prop key="auto.offset.reset">${auto.offset.reset}</prop>
			</props>
		</constructor-arg>
		<constructor-arg index="3" value="${fn.topic.order_cancel}" />
		<constructor-arg index="4" ref="cancelMallOrderHandler" />
	</bean>
	<bean id="cancelMallOrderHandler" class="com.feiniu.score.handler.CancelMallOrderHandler"/>

	<!-- 退货确认监听消费-->
	<bean id="returnOrderConfirmConsumerClient" class="com.feiniu.kafka.client.ConsumerClient" destroy-method="close">
		<constructor-arg index="0" value="${zookeeper.connect}" />
		<constructor-arg index="1" value="${fn.group.order.score.id}" />
		<constructor-arg index="2">
			<props>
				<prop key="zookeeper.connection.timeout.ms">${zookeeper.connection.timeout.ms}</prop>
				<prop key="auto.offset.reset">${auto.offset.reset}</prop>
			</props>
		</constructor-arg>
		<constructor-arg index="3" value="${fn.topic.order_refund}" />
		<constructor-arg index="4" ref="returnOrderConfirmHandler" />
	</bean>
	<bean id="returnOrderConfirmHandler" class="com.feiniu.score.handler.ReturnOrderConfirmHanderl"/>
	
	<!-- 收货确认监听消费-->
	<bean id="growthReceiveOrderConsumerClient" class="com.feiniu.kafka.client.ConsumerClient" destroy-method="close">
		<constructor-arg index="0" value="${zookeeper.connect}" />
		<constructor-arg index="1" value="${fn.group.order.score.id}" />
		<constructor-arg index="2">
			<props>
				<prop key="zookeeper.connection.timeout.ms">${zookeeper.connection.timeout.ms}</prop>
				<prop key="auto.offset.reset">${auto.offset.reset}</prop>
			</props>
		</constructor-arg>
		<constructor-arg index="3" value="${fn.topic.growth.order.receive}" />
		<constructor-arg index="4" ref="growthReceiveOrderHandler" />
	</bean>
	<bean id="growthReceiveOrderHandler" class="com.feiniu.score.handler.GrowthReceiveOrderHandler"/>

	<!-- 登录监听消费-->
	<bean id="growthMemLoginServiceConsumerClient" class="com.feiniu.kafka.client.ConsumerClient" destroy-method="close">
		<constructor-arg index="0" value="${zookeeper.connect}" />
		<constructor-arg index="1" value="${fn.group.order.score.id}" />
		<constructor-arg index="2">
			<props>
				<prop key="zookeeper.connection.timeout.ms">${zookeeper.connection.timeout.ms}</prop>
				<prop key="auto.offset.reset">${auto.offset.reset}</prop>
			</props>
		</constructor-arg>
		<constructor-arg index="3" value="${fn.topic.growth.mem.login}" />
		<constructor-arg index="4" ref="growthMemLoginHandler" />
	</bean>
	<bean id="growthMemLoginHandler" class="com.feiniu.score.handler.GrowthMemLoginHandler"/>

	<!-- 注册监听消费-->
	<bean id="registeredServiceConsumerClient" class="com.feiniu.kafka.client.ConsumerClient" destroy-method="close">
		<constructor-arg index="0" value="${zookeeper.connect}" />
		<constructor-arg index="1" value="${fn.group.order.score.id}" />
		<constructor-arg index="2">
			<props>
				<prop key="zookeeper.connection.timeout.ms">${zookeeper.connection.timeout.ms}</prop>
				<prop key="auto.offset.reset">${auto.offset.reset}</prop>
			</props>
		</constructor-arg>
		<constructor-arg index="3" value="${fn.topic.mem.registered}" />
		<constructor-arg index="4" ref="registeredHandler" />
	</bean>
	<bean id="registeredHandler" class="com.feiniu.score.handler.RegisteredHandler"/>

	<!-- 订单状态监听消费-->
	<bean id="orderStatusServiceConsumerClient" class="com.feiniu.kafka.client.ConsumerClient" destroy-method="close">
		<constructor-arg index="0" value="${zookeeper.connect}" />
		<constructor-arg index="1" value="${fn.group.order.score.id}" />
		<constructor-arg index="2">
			<props>
				<prop key="zookeeper.connection.timeout.ms">${zookeeper.connection.timeout.ms}</prop>
				<prop key="auto.offset.reset">largest</prop>
			</props>
		</constructor-arg>
		<constructor-arg index="3" value="${fn.topic.order.status}" />
		<constructor-arg index="4" ref="orderStatusHandler" />
	</bean>
	<bean id="orderStatusHandler" class="com.feiniu.score.handler.OrderStatusHandler"/>

	<!-- 换绑手机监听消费-->
	<bean id="modifyPhoneConsumerClient" class="com.feiniu.kafka.client.ConsumerClient" destroy-method="close">
		<constructor-arg index="0" value="${zookeeper.connect}" />
		<constructor-arg index="1" value="${fn.group.order.score.id}" />
		<constructor-arg index="2">
			<props>
				<prop key="zookeeper.connection.timeout.ms">${zookeeper.connection.timeout.ms}</prop>
				<prop key="auto.offset.reset">${auto.offset.reset}</prop>
			</props>
		</constructor-arg>
		<constructor-arg index="3" value="${fn.topic.member.modify.phone}" />
		<constructor-arg index="4" ref="modifyPhoneHandler" />
	</bean>
	<bean id="modifyPhoneHandler" class="com.feiniu.score.handler.MemberModifyPhoneHandler"/>

	<!-- 换绑邮箱监听消费-->
	<bean id="modifyEmailConsumerClient" class="com.feiniu.kafka.client.ConsumerClient" destroy-method="close">
		<constructor-arg index="0" value="${zookeeper.connect}" />
		<constructor-arg index="1" value="${fn.group.order.score.id}" />
		<constructor-arg index="2">
			<props>
				<prop key="zookeeper.connection.timeout.ms">${zookeeper.connection.timeout.ms}</prop>
				<prop key="auto.offset.reset">${auto.offset.reset}</prop>
			</props>
		</constructor-arg>
		<constructor-arg index="3" value="${fn.topic.member.modif.email}" />
		<constructor-arg index="4" ref="modifyEmailHandler" />
	</bean>
	<bean id="modifyEmailHandler" class="com.feiniu.score.handler.MemberModifyEmailHandler"/>

	<!-- 支付完成监听消费-->
	<bean id="orderPayServiceConsumerClient" class="com.feiniu.kafka.client.ConsumerClient" destroy-method="close">
		<constructor-arg index="0" value="${zookeeper.connect}" />
		<constructor-arg index="1" value="${fn.group.order.score.id}" />
		<constructor-arg index="2">
			<props>
				<prop key="zookeeper.connection.timeout.ms">${zookeeper.connection.timeout.ms}</prop>
				<prop key="auto.offset.reset">${auto.offset.reset}</prop>
			</props>
		</constructor-arg>
		<constructor-arg index="3" value="${fn.topic.order.pay}" />
		<constructor-arg index="4" ref="orderPayHandler" />
	</bean>
	<bean id="orderPayHandler" class="com.feiniu.score.handler.OrderPayHandler"/>

	<!-- 礼包监听消费-->
	<bean id="pkadConsumerClient" class="com.feiniu.kafka.client.ConsumerClient" destroy-method="close">
		<constructor-arg index="0" value="${zookeeper.connect}" />
		<constructor-arg index="1" value="${fn.group.order.score.id}" />
		<constructor-arg index="2">
			<props>
				<prop key="zookeeper.connection.timeout.ms">${zookeeper.connection.timeout.ms}</prop>
				<prop key="auto.offset.reset">${auto.offset.reset}</prop>
			</props>
		</constructor-arg>
		<constructor-arg index="3" value="${fn.topic.mrst}" />
		<constructor-arg index="4" ref="pkadHandler" />
	</bean>
	<bean id="pkadHandler" class="com.feiniu.score.handler.PkadHandler"/>
	
	<!-- 完善兴趣爱好-->
	<bean id="interestConsumerClient" class="com.feiniu.kafka.client.ConsumerClient" destroy-method="close">
		<constructor-arg index="0" value="${zookeeper.connect}" />
		<constructor-arg index="1" value="${fn.group.order.score.id}" />
		<constructor-arg index="2">
			<props>
				<prop key="zookeeper.connection.timeout.ms">${zookeeper.connection.timeout.ms}</prop>
				<prop key="auto.offset.reset">${auto.offset.reset}</prop>
			</props>
		</constructor-arg>
		<constructor-arg index="3" value="${fn.topic.interest}" />
		<constructor-arg index="4" ref="fillInInterestHandler" />
	</bean>
	<bean id="fillInInterestHandler" class="com.feiniu.score.handler.FillInInterestHandler"/>

	<!-- 积分生效站内信提醒-->
	<bean id="scoreEffectSendILConsumerClient" class="com.feiniu.kafka.client.ConsumerClient" destroy-method="close">
		<constructor-arg index="0" value="${zookeeper.connect}" />
		<constructor-arg index="1" value="${fn.group.order.score.id}" />
		<constructor-arg index="2">
			<props>
				<prop key="zookeeper.connection.timeout.ms">${zookeeper.connection.timeout.ms}</prop>
				<prop key="auto.offset.reset">${auto.offset.reset}</prop>
			</props>
		</constructor-arg>
		<constructor-arg index="3" value="${fn.topic.score.effect.il}" />
		<constructor-arg index="4" ref="scoreEffectSendILHandler" />
	</bean>


	<!-- app 升级送积分-->
	<bean id="appUpGradeConsumerClient" class="com.feiniu.kafka.client.ConsumerClient" destroy-method="close">
		<constructor-arg index="0" value="${zookeeper.connect}" />
		<constructor-arg index="1" value="${fn.group.order.score.id}" />
		<constructor-arg index="2">
			<props>
				<prop key="zookeeper.connection.timeout.ms">${zookeeper.connection.timeout.ms}</prop>
				<prop key="auto.offset.reset">${auto.offset.reset}</prop>
			</props>
		</constructor-arg>
		<constructor-arg index="3" value="${fn.topic.app.upgrade}" />
		<constructor-arg index="4" ref="appUpGradeHandler" />
	</bean>

	<!-- 成长值统计变动-->
	<bean id="growthValueNumChangeConsumerClient" class="com.feiniu.kafka.client.ConsumerClient" destroy-method="close">
		<constructor-arg index="0" value="${zookeeper.connect}" />
		<constructor-arg index="1" value="${fn.group.order.score.id}" />
		<constructor-arg index="2">
			<props>
				<prop key="zookeeper.connection.timeout.ms">${zookeeper.connection.timeout.ms}</prop>
				<prop key="auto.offset.reset">${auto.offset.reset}</prop>
			</props>
		</constructor-arg>
		<constructor-arg index="3" value="${fn.topic.growth.value.num}" />
		<constructor-arg index="4" ref="growthValueNumChangeHandler" />
	</bean>
	<bean id="growthValueNumChangeHandler" class="com.feiniu.score.handler.GrowthValueNumChangeHandler"/>


	<!-- 工会绑定-->
	<bean id="unionistBindClient" class="com.feiniu.kafka.client.ConsumerClient" destroy-method="close">
		<constructor-arg index="0" value="${zookeeper.connect}" />
		<constructor-arg index="1" value="${fn.group.order.score.id}" />
		<constructor-arg index="2">
			<props>
				<prop key="zookeeper.connection.timeout.ms">${zookeeper.connection.timeout.ms}</prop>
				<prop key="auto.offset.reset">${auto.offset.reset}</prop>
			</props>
		</constructor-arg>
		<constructor-arg index="3" value="${fn.topic.unionist.bind}" />
		<constructor-arg index="4" ref="unionistBindHandle" />
	</bean>
	<bean id="unionistBindHandle" class="com.feiniu.score.handler.UnionistBindHandle"/>

	<!-- 积分商城积分兑券 回滚操作-->
	<bean id="vipScoreRollBackClient" class="com.feiniu.kafka.client.ConsumerClient" destroy-method="close">
		<constructor-arg index="0" value="${zookeeper.connect}" />
		<constructor-arg index="1" value="${fn.group.order.score.id}" />
		<constructor-arg index="2">
			<props>
				<prop key="zookeeper.connection.timeout.ms">${zookeeper.connection.timeout.ms}</prop>
				<prop key="auto.offset.reset">${auto.offset.reset}</prop>
			</props>
		</constructor-arg>
		<constructor-arg index="3" value="${score.rollback.topic}" />
		<constructor-arg index="4" ref="vipScoreRollBackHandler" />
	</bean>
	<bean id="vipScoreRollBackHandler" class="com.feiniu.score.handler.VipScoreRollBackHandler"/>

</beans>