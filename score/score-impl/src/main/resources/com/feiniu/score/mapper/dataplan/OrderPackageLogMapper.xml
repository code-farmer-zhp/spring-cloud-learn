<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.feiniu.score.mapper.dataplan.OrderPackageLogMapper" >
  <resultMap id="BaseResultMap" type="com.feiniu.score.entity.dataplan.OrderPackageLog" >
    <id column="opl_seq" property="oplSeq" jdbcType="INTEGER" />
    <result column="mem_guid" property="memGuid" jdbcType="VARCHAR" />
    <result column="req_id" property="reqId" jdbcType="VARCHAR" />
    <result column="order_phone" property="orderPhone" jdbcType="VARCHAR" />
    <result column="device_id" property="deviceId" jdbcType="VARCHAR" />
    <result column="reg_time" property="regTime" jdbcType="TIMESTAMP" />
    <result column="order_time" property="orderTime" jdbcType="TIMESTAMP" />
    <result column="good_name" property="goodName" jdbcType="VARCHAR" />
    <result column="offer_specl" property="offerSpecl" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="staff_value" property="staffValue" jdbcType="VARCHAR" />
    <result column="ins_time" property="insTime" jdbcType="TIMESTAMP" />
    <result column="up_time" property="upTime" jdbcType="TIMESTAMP" />
    <result column="error_message" property="errorMessage" jdbcType="VARCHAR" />

  </resultMap>
  <sql id="Base_Column_List" >
    opl_seq, mem_guid, req_id, order_phone, device_id,reg_time, order_time, good_name, offer_specl,
    status, staff_value, ins_time, up_time,error_message
  </sql>

  <select id="getOrderPackageLogByReqId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from order_package_log
    where req_id=#{reqId}
  </select>

  <select id="getOrderPackageLogListBySelective" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from order_package_log
    where 1=1
    <if test="paramMap.reqId != null">
      and req_id=#{paramMap.reqId}
    </if>
    <if test="paramMap.memGuid != null">
      and mem_guid=#{paramMap.memGuid}
    </if>
    <if test="paramMap.orderPhone != null">
      and order_phone=#{paramMap.orderPhone}
    </if>
    <if test="paramMap.deviceId != null">
      and device_id =#{paramMap.deviceId}
    </if>
    <if test="paramMap.offerSpecl != null">
      and offer_specl =#{paramMap.offerSpecl}
    </if>
    <if test="paramMap.status != null">
      and status =#{paramMap.status}
    </if>
    <if test="paramMap.staffValue != null">
      and staff_value =#{paramMap.staffValue}
    </if>
    <if test="paramMap.startTime!= null and paramMap.endTime!=null">
      <![CDATA[
        and order_time >= #{paramMap.startTime}
        and order_time <= #{paramMap.endTime}
      ]]>
    </if>
    <if test="paramMap.order != null and paramMap.sortType != null" >
      order by ${paramMap.order}  ${paramMap.sortType}
    </if>
    <if test="paramMap.start!= null and paramMap.pageSize!=null">
      LIMIT #{paramMap.start},#{paramMap.pageSize}
    </if>
  </select>

  <select id="getOrderPackageLogCountBySelective" resultType="Integer">
    select count(1)
    from order_package_log
    where 1=1
    <if test="paramMap.reqId != null">
      and req_id=#{paramMap.reqId}
    </if>
    <if test="paramMap.memGuid != null">
      and mem_guid=#{paramMap.memGuid}
    </if>
    <if test="paramMap.orderPhone != null">
      and order_phone=#{paramMap.orderPhone}
    </if>
    <if test="paramMap.deviceId != null">
      and device_id =#{paramMap.deviceId}
    </if>
    <if test="paramMap.offerSpecl != null">
      and offer_specl =#{paramMap.offerSpecl}
    </if>
    <if test="paramMap.status != null">
      and status =#{paramMap.status}
    </if>
    <if test="paramMap.staffValue != null">
      and staff_value =#{paramMap.staffValue}
    </if>
    <if test="paramMap.startTime!= null and paramMap.endDate!=null">
      <![CDATA[
        and order_time >= #{paramMap.startTime}
        and order_time <= #{paramMap.endTime}
      ]]>
    </if>
  </select>

  <insert id="insertSelective" parameterType="com.feiniu.score.entity.dataplan.OrderPackageLog" >
    insert into order_package_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="oplSeq != null" >
        opl_seq,
      </if>
      <if test="memGuid != null" >
        mem_guid,
      </if>
      <if test="reqId != null" >
        req_id,
      </if>
      <if test="orderPhone != null" >
        order_phone,
      </if>
      <if test="deviceId != null" >
        device_id,
      </if>
      <if test="orderTime != null" >
        order_time,
      </if>
      <if test="goodName != null" >
        good_name,
      </if>
      <if test="offerSpecl != null" >
        offer_specl,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="staffValue != null" >
        staff_value,
      </if>
      <if test="regTime != null">
        reg_time,
      </if>
      <if test="errorMessage != null">
        error_message
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="oplSeq != null" >
        #{oplSeq,jdbcType=INTEGER},
      </if>
      <if test="memGuid != null" >
        #{memGuid,jdbcType=VARCHAR},
      </if>
      <if test="reqId != null" >
        #{reqId,jdbcType=VARCHAR},
      </if>
      <if test="orderPhone != null" >
        #{orderPhone,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null" >
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null" >
        #{orderTime},
      </if>
      <if test="goodName != null" >
        #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="offerSpecl != null" >
        #{offerSpecl,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="staffValue != null" >
        #{staffValue,jdbcType=VARCHAR},
      </if>
      <if test="regTime !=null">
        #{regTime},
      </if>
      <if test="errorMessage !=null">
        #{errorMessage,jdbcType=VARCHAR}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.feiniu.score.entity.dataplan.OrderPackageLog" >
    update order_package_log
    <set >
      <if test="memGuid != null" >
        mem_guid = #{memGuid,jdbcType=VARCHAR},
      </if>
      <if test="reqId != null" >
        req_id = #{reqId,jdbcType=VARCHAR},
      </if>
      <if test="orderPhone != null" >
        order_phone = #{orderPhone,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null" >
        device_id = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null" >
        order_time = #{orderTime},
      </if>
      <if test="goodName != null" >
        good_name = #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="offerSpecl != null" >
        offer_specl = #{offerSpecl,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="staffValue != null" >
        staff_value = #{staffValue,jdbcType=VARCHAR}
      </if>
    </set>
    where opl_seq = #{oplSeq,jdbcType=INTEGER}
  </update>

  <update id="updateStatusByReqId">
    update order_package_log
    set status = #{status,jdbcType=VARCHAR},error_message=#{errorMessage,jdbcType=VARCHAR}
    where req_id = #{reqId,jdbcType=VARCHAR}
  </update>

  <select id="selectPhoneOrDevice" resultType="Integer">
    SELECT count(1) FROM order_package_log
    WHERE order_phone = #{orderPhone} AND status = #{status} OR device_id = #{deviceId} AND status=#{status} for update


  </select>
</mapper>