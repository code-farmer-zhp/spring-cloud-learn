<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.feiniu.score.mapper.score.ScoreYearMapper">

    <select id="getScoreYear" resultMap="scoreYear">
		SELECT  *
				FROM score_year${tableNo}
				WHERE mem_guid = #{memGuid} AND due_time= date_format(date_add(#{insTime}, interval 1 year),'%Y-12-31')
				AND source_type = 1 FOR UPDATE
	</select>

    <select id="getScoreYearById" resultMap="scoreYear">
		SELECT  *
				FROM score_year${tableNo}
				WHERE scy_seq=#{scySeq} FOR UPDATE
	</select>


    <update id="addLockedScoreYear">
		UPDATE score_year${tableNo} SET total_score  = total_score + #{scoreGet}, locked_score = locked_score + #{scoreGet},up_time =now()
				WHERE scy_seq = #{scySeq} 
	</update>

    <update id="updateLockedAvailableScoreYear">
		UPDATE score_year${tableNo} SET total_score  = total_score + #{totalScore}, locked_score = locked_score + #{lockedScore} ,up_time =now()
				, available_score = available_score + #{availableScore}
				WHERE scy_seq = #{scySeq} 
	</update>


    <update id="updateAvailableScoreYear">
		UPDATE score_year${tableNo} SET total_score  = total_score + #{totalScore}, available_score = available_score + #{totalScore},up_time =now()
				WHERE scy_seq = #{scySeq} 
	</update>


    <insert id="saveScoreYear" keyProperty="sy.scySeq" useGeneratedKeys="true">
		INSERT INTO score_year${tableNo}
		 (mem_guid, total_score, available_score, locked_score, expired_score, due_time, expir_job_status,seller_no,score_type,source_type)
			VALUES
			(#{sy.memGuid}, #{sy.totalScore},#{sy.availableScore} ,#{sy.lockedScore}, #{sy.expiredScore},
			 date_format(date_add(#{sy.dueTime}, interval 1 year),'%Y-12-31'), #{sy.expirJobStatus},#{sy.sellerNo},#{sy.scoreType},#{sy.sourceType})
						
	</insert>

    <select id="getScoreYearByMemGuid" resultMap="scoreYear">
			SELECT  *
				FROM score_year${tableNo}
				WHERE mem_guid = #{memGuid} and due_time=#{dueTime} AND source_type = 1 for update
	</select>

    <!-- 扣除积分 -->
    <update id="deductAvailableScore">
		UPDATE score_year${tableNo} set available_score = available_score - #{consumeScore},
				used_score = used_score + #{consumeScore},up_time =now()
		WHERE  scy_seq=#{scySeq}
	</update>

    <!-- 取消订单，返回积分 -->
    <update id="addScoreById">
		UPDATE score_year${tableNo} set available_score = available_score + #{consumeScore}, used_score = used_score - #{consumeScore},up_time =now()
			   WHERE  scy_seq=#{scySeq}
	</update>
    <!-- 退回的积分，直接失效 -->
    <update id="addExpiredScoreById">
		UPDATE score_year${tableNo} set expired_score = expired_score + #{consumeScore}, used_score = used_score - #{consumeScore},up_time =now()
			   WHERE  scy_seq=#{scySeq}
	</update>


    <!-- 取消订单（已付款） 扣除冻结积分 -->
    <update id="deductLockedScore">
	    UPDATE score_year${tableNo} SET total_score  = total_score - #{scoreGet}, locked_score = locked_score - #{scoreGet},up_time =now()
		 	   WHERE scy_seq = #{scySeq}
	</update>

    <!-- 积分变可用 -->
    <update id="addAvailabeScore">
		UPDATE score_year${tableNo} set available_score = available_score + #{scoreGet}, locked_score = locked_score - #{scoreGet},up_time =now()
			   WHERE  scy_seq=#{scySeq}
	</update>

    <!-- 积分过期（减少可用积分） -->
    <update id="deductAvailabeScore">
		UPDATE score_year${tableNo} set available_score = available_score - #{consumeScore},expired_score = expired_score + #{consumeScore},up_time =now()
			   WHERE  scy_seq=#{scySeq}
	</update>

    <update id="updateExpiredScoreById">
		UPDATE score_year${tableNo} set total_score = total_score + #{scoreNumber},expired_score = expired_score + #{scoreNumber},up_time =now()
			   WHERE  scy_seq=#{scySeq}
	</update>

    <select id="getScoreYearList" resultMap="scoreYear">
        SELECT *
        from score_year${tableNo}
        where 1=1
        <if test="mapParam.dueTime != null">
            and due_time =#{mapParam.dueTime}
            <!-- 过期积分job执行状态 0默认状态 1成功  -->
            and expir_job_status = 0
        </if>
        and mem_guid=#{memGuid}
        limit #{mapParam.start},#{mapParam.pageSize}
    </select>


    <update id="updateScoreYearJobStatus">
        UPDATE score_year${tableNo}
        SET up_time=now(),
        <!-- 过期积分job执行状态 -->
        expir_job_status=#{status}
        WHERE scy_seq = #{scySeq}
    </update>

    <select id="getExpired" resultType="int">
		SELECT sum(available_score)
				FROM score_year${tableNo}
				WHERE due_time = #{dueTime}
	</select>


    <select id="getScoreYearSelf" resultMap="scoreYear">
		SELECT  *
		FROM score_year${tableNo}
		WHERE mem_guid = #{memGuid}
			  AND source_type = 1 AND due_time >= CURRENT_DATE
			  AND available_score > 0
		ORDER  BY due_time
		FOR UPDATE
	</select>

    <select id="getScoreYearMall" resultType="map">
		SELECT sum(available_score) as "scoreTotal",seller_no as "sellerNo"
		FROM score_year${tableNo}
		WHERE mem_guid = #{memGuid}
			  AND source_type = 2 AND due_time >= CURRENT_DATE
			  AND available_score > 0
		GROUP BY seller_no
		ORDER BY sum(available_score) DESC
		FOR UPDATE

	</select>

    <select id="getScoreYearBySerrlerNo" resultMap="scoreYear">
		SELECT  *
		FROM score_year${tableNo}
		WHERE mem_guid = #{memGuid} AND seller_no=#{sellerNo}
			  AND source_type = 2 AND due_time >= CURRENT_DATE
		ORDER  BY score_type,due_time
		FOR UPDATE

	</select>

    <select id="getScoreYearForMall" resultMap="scoreYear">
		SELECT  *
		FROM score_year${tableNo}
		WHERE mem_guid = #{memGuid} AND seller_no=#{sellerNo}
			  AND source_type = 2 AND due_time= date_format(date_add(#{insTime}, interval 1 year),'%Y-12-31')
			  AND score_type = #{scoreType}
		FOR UPDATE

	</select>


    <select id="getExpiringScore" resultType="Integer">
		SELECT  sum(available_score)
		FROM score_year${tableNo}
		WHERE mem_guid = #{memGuid} AND due_time = #{dueTime}
	</select>

    <select id="getAvaliableScore" resultType="Integer">
		SELECT  sum(available_score)
		FROM score_year${tableNo}
		WHERE mem_guid = #{memGuid} AND due_time >= CURRENT_DATE
	</select>

    <select id="getExpireMemGuids" resultType="java.lang.String">
        SELECT DISTINCT(mem_guid)
        FROM score_year${tableNo}
        WHERE 1=1
        <if test="mapParam.dueTime != null">
            AND due_time =#{mapParam.dueTime}
            <!-- 过期积分job执行状态 0默认状态 1成功  -->
            AND expir_job_status = 0
        </if>

        LIMIT #{mapParam.start},#{mapParam.pageSize}

    </select>


    <resultMap type="com.feiniu.score.entity.score.ScoreYear" id="scoreYear">
        <id property="scySeq" column="scy_seq"/>
        <result property="memGuid" column="mem_guid"/>
        <result property="totalScore" column="total_score"/>
        <result property="availableScore" column="available_score"/>
        <result property="usedScore" column="used_score"/>
        <result property="expiredScore" column="expired_score"/>
        <result property="lockedScore" column="locked_score"/>
        <result property="dueTime" column="due_time"/>
        <result property="sellerNo" column="seller_no"/>
        <result property="scoreType" column="score_type"/>
        <result property="sourceType" column="source_type"/>
    </resultMap>

</mapper>