<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <!-- 导入 applicationContext-jdbc.properties 文件 -->
    <!--comment bean propertiesConfigBean when run Application.java cause no loproperties needed-->
    <!-- 这种方式和配置中心方式不兼容-->
    <!--<bean id="propertiesConfigBean" class="com.feiniu.member.util.PropertyPlaceholderConfigurerEx">
        <property name="locations">
            <list>
                <value>classpath:application.properties</value>
            </list>
        </property>
    </bean>-->
    <mvc:annotation-driven/>
    <context:annotation-config/>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.feiniu.member.common.CSRFInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.feiniu.member.common.TimestampFlashInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>


    <context:component-scan base-package="com.feiniu.member"/>

    <!--<context:property-placeholder location="classpath*:application.properties"/>-->

    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <bean id="requestFactory" class="org.springframework.http.client.SimpleClientHttpRequestFactory">
        <property name="readTimeout" value="${requestFactory.readTimeout}"/>
        <property name="connectTimeout" value="${requestFactory.connectTimeout}"/>
    </bean>

    <bean id="httpRequestUtil" class="com.feiniu.member.util.HttpRequestUtil">
        <property name="loginCookieName" value="${loginCookieName}"/>
        <property name="readTimeout" value="${requestFactory.readTimeout}"/>
        <property name="connectTimeout" value="${requestFactory.connectTimeout}"/>
    </bean>

    <!-- restful客户端 -->
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <constructor-arg ref="requestFactory"/>
        <property name="messageConverters">
            <list>
                <bean id="stringHttpMessageConverter"
                      class="org.springframework.http.converter.StringHttpMessageConverter">
                    <constructor-arg value="UTF-8"/>
                </bean>
                <bean id="formHttpMessageConverter"
                      class="org.springframework.http.converter.FormHttpMessageConverter"/>
            </list>
        </property>
    </bean>
    <bean id="smSeqTag" class="com.feiniu.member.util.SmSeqUtil">
        <property name="itemStoreDomainUrl" value="${storeDomain.url}"/>
    </bean>
</beans>